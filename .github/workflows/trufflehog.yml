name: trufflehog

on:
  pull_request:
    types: [opened, synchronize]  # Runs only when a new PR is created or updated
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: read
  pull-requests: write  # âœ… Allows posting PR comments

jobs:
  scan:
    name: trufflehog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # âœ… Fetches only the last two commits for diff scanning

      - name: Install TruffleHog
        run: pip install trufflehog

      - name: Run TruffleHog Secret Scan on New PR Changes
        id: trufflehog_scan
        continue-on-error: true  # âœ… Ensures the job doesn't stop if secrets are found
        run: |
          # Get the base branch of the PR
          BASE_BRANCH="origin/${{ github.base_ref }}"
          git fetch $BASE_BRANCH --depth=1
          
          # Scan only the files changed in the PR
          git diff --name-only $BASE_BRANCH > changed_files.txt
          if [ ! -s changed_files.txt ]; then
            echo "No changed files detected. Exiting."
            exit 0
          fi
          
          # Run TruffleHog only on changed files
          trufflehog --regex --entropy=True --json $(cat changed_files.txt) | tee trufflehog_output.json
          
          # Fail the PR if secrets are found
          if grep -q "Reason" trufflehog_output.json; then
            echo "ðŸš¨ Secrets detected by TruffleHog!"
            exit 1
          fi

      - name: Post Comment on PR if Secrets Found
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          COMMENT="ðŸš¨ TruffleHog found secrets in this PR! Please check the logs."
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [[ -z "$PR_NUMBER" ]]; then
            echo "No PR number found. Skipping comment."
            exit 0
          fi
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\": \"$COMMENT\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
