name: TruffleHog PR Scanner

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write  

jobs:
  trufflehog_scan:
    name: Run TruffleHog on New PR Changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  

      - name: Install TruffleHog v3 (Latest)
        run: |
          pip install --upgrade trufflehog

      - name: Get Changed Files in PR
        id: changed_files
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          echo "üîç Checking changed files..."
          git diff --name-only origin/${{ github.base_ref }} > changed_files.txt

          echo "Files detected in this PR:"
          cat changed_files.txt

          if [ ! -s changed_files.txt ]; then
            echo "‚ö†Ô∏è No changed files detected. Exiting."
            exit 0
          fi

      - name: Run TruffleHog on Changed Files
        id: run_trufflehog
        continue-on-error: true
        run: |
          echo "üöÄ Running TruffleHog v3 on PR changes..."
          while read -r file; do
            echo "Scanning file: $file"
            trufflehog filesystem --entropy=True --json --path "$file" | tee -a trufflehog_output.json
          done < changed_files.txt

          echo "üîç TruffleHog output:"
          cat trufflehog_output.json

          if grep -q "Reason" trufflehog_output.json; then
            echo "üö® Secrets detected!"
            exit 1
          fi

      - name: Post Comment if Secrets Found
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          COMMENT="üö® TruffleHog found secrets in this PR! Please check the logs."
          PR_NUMBER="${{ github.event.pull_request.number }}"
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\": \"$COMMENT\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
