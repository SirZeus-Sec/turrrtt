name: trufflehog
on:
  pull_request:
  workflow_dispatch:

jobs:
  scan:
    name: trufflehog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install TruffleHog
        run: pip install trufflehog jq

      - name: Get Changed Files
        id: changed_files
        run: |
          CHANGED_FILES=$(jq -r '.pull_request.base.repo.full_name as $repo | .pull_request.number as $pr | .pull_request.head.sha as $sha | "https://api.github.com/repos/\($repo)/pulls/\($pr)/files" | @sh' "$GITHUB_EVENT_PATH" | xargs curl -s | jq -r '.[].filename')
          echo "Changed files: $CHANGED_FILES"
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Run TruffleHog Secret Scan
        run: |
          FOUND_SECRETS=""
          for file in $CHANGED_FILES; do
            echo "Scanning file: $file"
            OUTPUT=$(trufflehog --regex --entropy=True --json "$file" 2>/dev/null || true)
            if [ -n "$OUTPUT" ]; then
              FOUND_SECRETS+="$OUTPUT\n"
            fi
          done
          
          if [ -n "$FOUND_SECRETS" ]; then
            echo "üö® Secrets detected by TruffleHog!"
            echo "$FOUND_SECRETS" > trufflehog_output.json
            echo "FOUND_SECRETS=true" >> $GITHUB_ENV
            exit 1
          fi

      - name: Post TruffleHog Results as PR Comment
        if: failure()
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          if [[ -z "$PR_NUMBER" || "$PR_NUMBER" == "null" ]]; then
            echo "No PR number found. Skipping comment."
            exit 0
          fi

          # Format detected secrets
          COMMENT="üö® **TruffleHog found secrets in this PR!**\n\n"
          COMMENT+="üîç **Details:**\n"
          
          while IFS= read -r line; do
            COMMENT+="\`\`\`\n$line\n\`\`\`\n"
          done < trufflehog_output.json
          
          curl -s -X POST -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$COMMENT\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
