name: trufflehog
on:
  pull_request:  # Runs on new PRs to any branch
  push:  # Runs on direct commits to any branch
  workflow_dispatch:  # Allows manual triggering

jobs:
  scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to detect changes

      - name: Get Changed Files
        id: changed_files
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | tr '\n' ' ')
          echo "Changed files: $CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Install TruffleHog
        run: |
          pip install trufflehog

      - name: Run TruffleHog Secret Scan
        run: |
          if [ -z "$files" ]; then
            echo "No changed files detected. Skipping scan."
            exit 0
          fi
          trufflehog --regex --entropy=True --json $files > trufflehog_output.json || true
          if jq -e '.found' trufflehog_output.json > /dev/null; then
            echo "ðŸš¨ Secrets detected by TruffleHog!"
            echo "secrets_found=true" >> $GITHUB_ENV
          else
            echo "âœ… No secrets found."
            echo "secrets_found=false" >> $GITHUB_ENV
          fi

      - name: Post TruffleHog Results as PR Comment
        if: env.secrets_found == 'true'
        run: |
          COMMENT="ðŸš¨ TruffleHog found secrets in this PR! Please check the logs."
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [[ -z "$PR_NUMBER" ]]; then
            echo "No PR number found. Skipping comment."
            exit 0
          fi
          curl -s -X POST -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$COMMENT\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
