name: trufflehog

on:
  pull_request:
    types: [opened, synchronize]  # Runs when a new PR is opened or updated
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: read
  pull-requests: write  # Enables posting comments on the PR

jobs:
  scan:
    name: trufflehog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Use full history so we have both base and head commit data

      - name: Install TruffleHog
        run: pip install trufflehog

      - name: Get Changed Files from PR
        id: changed_files
        run: |
          echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
          echo "Head SHA: ${{ github.event.pull_request.head.sha }}"
          # List only files changed between the base and head commits
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt

      - name: Run TruffleHog on Changed Files
        id: run_trufflehog
        run: |
          rm -f combined_output.json || true
          touch combined_output.json
          while IFS= read -r file; do
            echo "Scanning file: $file"
            # Run in filesystem mode on each file individually.
            trufflehog filesystem --regex --entropy=True --json "$file" >> combined_output.json || true
          done < changed_files.txt
          echo "Combined TruffleHog Output:"
          cat combined_output.json
          if grep -q "Reason" combined_output.json; then
            echo "ğŸš¨ Secrets detected by TruffleHog!"
            exit 1
          fi

      - name: Post PR Comment if Secrets Detected
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          COMMENT="ğŸš¨ TruffleHog found secrets in this PR! Please check the logs."
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [[ -z "$PR_NUMBER" ]]; then
            echo "No PR number found. Skipping comment."
            exit 0
          fi
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\": \"$COMMENT\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
